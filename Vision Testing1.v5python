{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\n# vex-vision-config:begin\nvision_5__BLUEBOX = Signature(1, -4097, -1659, -2878,2907, 11343, 7125,1.4, 0)\nvision_5__REDBOX = Signature(2, -1001, 135, -433,-1953, -589, -1271,0.7, 0)\nvision_5__GREENBOX = Signature(3, -697, 489, -104,-739, 1, -369,1, 0)\nvision_5 = Vision(Ports.PORT5, 50, vision_5__BLUEBOX, vision_5__REDBOX, vision_5__GREENBOX)\n# vex-vision-config:end\nleft_motor_a = Motor(Ports.PORT1, GearSetting.RATIO_18_1, False)\nleft_motor_b = Motor(Ports.PORT2, GearSetting.RATIO_18_1, False)\nleft_drive_smart = MotorGroup(left_motor_a, left_motor_b)\nright_motor_a = Motor(Ports.PORT3, GearSetting.RATIO_18_1, True)\nright_motor_b = Motor(Ports.PORT4, GearSetting.RATIO_18_1, True)\nright_drive_smart = MotorGroup(right_motor_a, right_motor_b)\ndrivetrain_inertial = Inertial(Ports.PORT20)\ndrivetrain = SmartDrive(left_drive_smart, right_drive_smart, drivetrain_inertial, 319.19, 320, 40, MM, 1)\neye_1 = Optical(Ports.PORT19)\nintake = Motor(Ports.PORT6, GearSetting.RATIO_18_1, True)\ncontroller_1 = Controller(PRIMARY)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\ndef calibrate_drivetrain():\n    # Calibrate the Drivetrain Inertial\n    sleep(200, MSEC)\n    brain.screen.print(\"Calibrating\")\n    brain.screen.next_row()\n    brain.screen.print(\"Inertial\")\n    drivetrain_inertial.calibrate()\n    while drivetrain_inertial.is_calibrating():\n        sleep(25, MSEC)\n    brain.screen.clear_screen()\n    brain.screen.set_cursor(1, 1)\n\n\ndef play_vexcode_sound(sound_name):\n    # Helper to make playing sounds from the V5 in VEXcode easier and\n    # keeps the code cleaner by making it clear what is happening.\n    print(\"VEXPlaySound:\" + sound_name)\n    wait(5, MSEC)\n\n# add a small delay to make sure we don't print in the middle of the REPL header\nwait(200, MSEC)\n# clear the console to make sure we don't have the REPL in the console\nprint(\"\\033[2J\")\n\n#endregion VEXcode Generated Robot Configuration\n\n\n# ----------------------------------------------------------------------------\n# \n#    Project:        Detecting Objects (Vision)\n#    Description:    This project will detect 3 different colored objects\n#                    and display when each object is found on the V5\n#                    Brain's screen.\n#    Configuration:  Vision5 on Port 5\n# \n# ----------------------------------------------------------------------------\n\n# Library imports\nfrom vex import *\n\n# Begin project code\ncheck_blue = Event()\nif controller_1.buttonA.pressing():\n    intake.spin(REVERSE)\n\n# Will check to see if there is a blue object in view of the vision\n# sensor and display the result on line 1 on the V5 Brain's screen\nif eye_1.color() == Color.GREEN:\n    intake.stop()\n    def has_blue_callback():\n        brain.screen.clear_row(1)\n        brain.screen.set_cursor(1, 1)\n        vexcode_vision_5_objects = vision_5.take_snapshot(vision_5__BLUEBOX)\n        if vexcode_vision_5_objects and len(vexcode_vision_5_objects) > 0:\n            if vision_5.largest_object().centerX < 154 - 5:\n                drivetrain.turn(LEFT)\n                brain.screen.print(\"Object Right\")\n            elif vision_5.largest_object().centerX > 154 + 5:\n                drivetrain.turn(RIGHT)\n                brain.screen.print(\"Object left\")\n            else:\n                drivetrain.drive(FORWARD)\n                brain.screen.print(\"Straight Ahead\")\n        else:\n            brain.screen.print(\"No Ball\")\nelse:\n    intake.spin(FORWARD)\n    drivetrain_inertial.set_heading(180,DEGREES)\n    wait(5,SECONDS)\n    drivetrain.drive_for(FORWARD,12,INCHES,wait=True)\n    intake.spin(FORWARD)\n    wait(1,SECONDS)\n    intake.stop()\n# register event handlers\ncheck_blue(has_blue_callback)\n\n# small delay to ensure that the event handlers are ready to be used\nwait(15, MSEC)\n\n# set the print font for all future prints to the V5 screen\nbrain.screen.set_font(FontType.MONO40)\n\n# constantly runs to check for new sensor data\nwhile True:\n    check_blue.broadcast_and_wait()\n    wait(0.1, SECONDS)\nwhile True:\n    left_motor_a.set_velocity((controller_1.axis3.position() + controller_1.axis4.position() + controller_1.axis1.position()), PERCENT)\n    left_motor_a.spin(FORWARD)\n    right_motor_a.set_velocity((controller_1.axis3.position() - controller_1.axis4.position() - controller_1.axis1.position()), PERCENT)\n    right_motor_a.spin(FORWARD)\n    left_motor_b.set_velocity((controller_1.axis3.position() - controller_1.axis4.position() + controller_1.axis1.position()), PERCENT)\n    left_motor_b.spin(FORWARD)\n    right_motor_b.set_velocity((controller_1.axis3.position() + controller_1.axis4.position() - controller_1.axis1.position()), PERCENT)\n    right_motor_b.spin(FORWARD)\n","textLanguage":"python","rconfig":[{"port":[5],"name":"vision_5","customName":false,"deviceType":"Vision","deviceClass":"vision","setting":{"config":"{\"config\":{\"brightness\":50,\"signatures\":[{\"name\":\"BLUEBOX\",\"parameters\":{\"uMin\":-4097,\"uMax\":-1659,\"uMean\":-2878,\"vMin\":2907,\"vMax\":11343,\"vMean\":7125,\"rgb\":1,\"type\":0,\"name\":\"BLUEBOX\"},\"range\":1.4},{\"name\":\"REDBOX\",\"parameters\":{\"uMin\":-1001,\"uMax\":135,\"uMean\":-433,\"vMin\":-1953,\"vMax\":-589,\"vMean\":-1271,\"rgb\":1,\"type\":0,\"name\":\"REDBOX\"},\"range\":0.7},{\"name\":\"GREENBOX\",\"parameters\":{\"uMin\":-697,\"uMax\":489,\"uMean\":-104,\"vMin\":-739,\"vMax\":1,\"vMean\":-369,\"rgb\":1,\"type\":0,\"name\":\"GREENBOX\"},\"range\":1},{\"name\":\"SIG_4\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_4\"},\"range\":2.5},{\"name\":\"SIG_5\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_5\"},\"range\":2.5},{\"name\":\"SIG_6\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_6\"},\"range\":2.5},{\"name\":\"SIG_7\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_7\"},\"range\":2.5}],\"codes\":[]}}","isConfigured":"false"},"triportSourcePort":22},{"port":[1,2,3,4,20],"name":"drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"4-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"fwd","gyroType":"inertial","width":"295","unit":"mm","wheelbase":"40","wheelbaseUnit":"mm","xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180"},"triportSourcePort":null},{"port":[19],"name":"eye_1","customName":true,"deviceType":"Optical","deviceClass":"optical","setting":{}},{"port":[6],"name":"intake","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"}},{"port":[],"name":"controller_1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"}}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"3.0.4","minVersion":"3.0.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"target":"Physical"}